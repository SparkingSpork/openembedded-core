From 053c07d6b5c22d8fbb404290906b046c989e6b69 Mon Sep 17 00:00:00 2001
From: Haris Okanovic <haris.okanovic@ni.com>
Date: Fri, 25 Jan 2019 18:50:21 -0600
Subject: [PATCH 3/3] opkg_gpg: Move pubkeys from /etc/opkg/*.gpg -->
 /etc/opkg/gpg/

gpgme/gpg generates many files during runtime inside it's homedir.
Many are undocumented implementation details that may change
version-to-version, and thus difficult to manage by opkg.
Dual-purposing opkg's config dir this way makes it impossible to sanely
implement `opkg-key reset` and adds otherwise unnecessary noise around
opkg's configuration files.

This change moves gpg's homedir to /etc/opkg/gpg/, a subdirectory of
opkg's config dir, and fixes `opkg-key reset` to delete everything.

Additionally, it simplifies how gpg in invoked to add/remove/list keys.
This is necessary to avoid a format change of gpg's homedir on when
using gpg 2.2+. gpg is now invoked with a `--homedir /etc/opkg/gpg/`
parameter instead specifying individual files.

This are unfortunately a breaking change (if gpg is enabled)!

You can preserve existing pubkeys in gpg_dir one of the following ways:

 (a) Move trusted.gpg, secring.gpg, and trustdb.gpg to the new gpg
     subdirectory under opkg's config dir. This is only safe before
     first use (while gpg dir is empty), otherwise it may overwrite
     newly added keys.

 (b) Add `option gpg_dir /etc/opkg` in opkg.conf to revert back to
     old directory layout. You should avoid using opkg-key in this
     case, since it doesn't respect non-default gpg_dir.

Also note that running `opkg-key populate` still reloads key files from
/usr/share/opkg/keyrings/. If you keep a copy of trusted pubkeys in that
directory, it may be sufficient to simply re-populate them instead of
migrating gpg_dir.

Signed-off-by: Haris Okanovic <haris.okanovic@ni.com>
Signed-off-by: Alejandro del Castillo <alejandro.delcastillo@ni.com>

Upstream-Status: Backport
---
 libopkg/opkg_conf.h |  2 +-
 libopkg/opkg_gpg.c  |  9 +++++++++
 utils/opkg-key      | 15 ++++++++-------
 3 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/libopkg/opkg_conf.h b/libopkg/opkg_conf.h
index 0734067..eb56a29 100644
--- a/libopkg/opkg_conf.h
+++ b/libopkg/opkg_conf.h
@@ -49,7 +49,7 @@ extern "C" {
 #define OPKG_CONF_DEFAULT_HASH_LEN 1024
 
 #define OPKG_CONF_DEFAULT_SIGNATURE_TYPE "gpg"
-#define OPKG_CONF_GPG_DEFAULT_DIR OPKG_CONF_DEFAULT_CONF_FILE_DIR
+#define OPKG_CONF_GPG_DEFAULT_DIR OPKG_CONF_DEFAULT_CONF_FILE_DIR "/gpg"
 #define OPKG_CONF_GPG_TRUST_ONLY "TrustOnly"
 #define OPKG_CONF_GPG_TRUST_ANY "TrustAny"
 #define OPKG_CONF_DEFAULT_GPG_TRUST_LEVEL OPKG_CONF_GPG_TRUST_ONLY
diff --git a/libopkg/opkg_gpg.c b/libopkg/opkg_gpg.c
index fcf5fa3..f63c455 100644
--- a/libopkg/opkg_gpg.c
+++ b/libopkg/opkg_gpg.c
@@ -20,11 +20,13 @@
 
 #include <gpgme.h>
 #include <stdlib.h>
+#include <sys/stat.h>
 
 #include "opkg_conf.h"
 #include "opkg_message.h"
 #include "opkg_gpg.h"
 #include "sprintf_alloc.h"
+#include "file_util.h"
 
 static int gpgme_init()
 {
@@ -40,6 +42,13 @@ static int gpgme_init()
         goto err;
     }
 
+    if (!file_exists(opkg_config->gpg_dir)) {
+        if (file_mkdir_hier(opkg_config->gpg_dir, 0700) != 0) {
+            opkg_perror(ERROR, "Failed to create gpg home dir: %s", opkg_config->gpg_dir);
+            goto err;
+        }
+    }
+
     err = gpgme_set_engine_info(GPGME_PROTOCOL_OpenPGP, NULL, opkg_config->gpg_dir);
     if (err) {
         opkg_msg(ERROR, "GPGME Failed to set signature directory: %s\n", gpg_strerror(err));
diff --git a/utils/opkg-key b/utils/opkg-key
index 3049f54..8550ea9 100755
--- a/utils/opkg-key
+++ b/utils/opkg-key
@@ -32,7 +32,7 @@ else
   ROOT=""
 fi
 
-CFGROOT="$ROOT/etc/opkg"
+GPGHOMEDIR="$ROOT/etc/opkg/gpg"
 
 command="$1"
 if [ -z "$command" ]; then
@@ -52,10 +52,13 @@ else
     exit 1
 fi
 
-# We don't use a secret keyring, of course, but gpg panics and
-# implodes if there isn't one available
+GPG="$GPGCMD --no-options --homedir $GPGHOMEDIR"
 
-GPG="$GPGCMD --no-options --no-default-keyring --keyring $CFGROOT/trusted.gpg --secret-keyring $CFGROOT/secring.gpg --trustdb-name $CFGROOT/trustdb.gpg"
+# Gpg home dir isn't created automatically when --homedir option is used
+if [ ! -e "$GPGHOMEDIR" ]; then
+    mkdir -m 0700 "$GPGHOMEDIR"
+    echo "Created gpg homedir"
+fi
 
 case "$command" in
     add)
@@ -87,9 +90,7 @@ case "$command" in
         $GPG $*
         ;;
     reset)
-        rm -f $CFGROOT/trusted.gpg $CFGROOT/trusted.gpg~
-        rm -f $CFGROOT/secring.gpg $CFGROOT/secring.gpg~
-        rm -f $CFGROOT/trustdb.gpg $CFGROOT/trustdb.gpg~
+        rm -Rf "$GPGHOMEDIR"
         echo "OK"
         ;;
     populate)
-- 
2.20.0

